
@using Kendo.Mvc.UI

@(Html.Kendo().Grid<SpecTester.Web.Areas.Administration.ViewModels.TrainingAdminViewModel>()
    .Name("trainingGrid")
    .Columns(columns =>
    {
        columns.Bound(c => c.Author);
        columns.Bound(c => c.Name);
        columns.Bound(c => c.IsDeleted);
        columns.Bound(c => c.Score);
        columns.Bound(c => c.CreatedOn).Format("{0:d}");
        columns.Bound(c => c.ModifiedOn).Format("{0:d}");
        columns.Bound(c => c.Users);
        columns.Bound(c => c.Dishes);
        columns.Command(command => { command.Edit(); command.Destroy(); }).Width(250);
    })
    .ToolBar(toolbar => toolbar.Create())
    .Editable(editable => editable.Mode(GridEditMode.InLine))
    .HtmlAttributes(new { style = "height: 700px;" })
        .Scrollable()
        .Groupable()
        .Sortable()
        .Pageable(pageable => pageable
            .Refresh(true)
            .PageSizes(true)
            .ButtonCount(5))
        .DataSource(dataSource => dataSource
            .Ajax()
            .Model(model =>
            {
                model.Id(p => p.Id);
                model.Field(p => p.ModifiedOn).Editable(false);
                model.Field(p => p.Id).Editable(false);
                model.Field(p => p.CreatedOn).Editable(false);
                model.Field(p => p.Author).Editable(false);
                model.Field(p => p.Users).Editable(false);
                model.Field(p => p.Dishes).Editable(false);
            })
            .Create(create => create.Action("Create", "Training"))
            .Read(read => read.Action("Read", "Training"))
            .Update(update => update.Action("Update", "Training"))
            .Destroy(destroy => destroy.Action("Delete", "Training"))
            .PageSize(20)
        )
)