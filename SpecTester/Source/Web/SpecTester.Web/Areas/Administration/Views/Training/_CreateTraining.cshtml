@model SpecTester.Web.Areas.Administration.ViewModels.CreateTrainingViewModel
@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm("Create", "Training", FormMethod.Post)) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>TrainingSession</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2 col-md-offset-3" })
            <div class="col-md-2">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Score, htmlAttributes: new { @class = "control-label col-md-2 col-md-offset-3" })
            <div class="col-md-2">
                @Html.EditorFor(model => model.Score, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Score, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Dishes, "Dishes", htmlAttributes: new { @class = "control-label col-md-2 col-md-offset-3" })
            <div class="col-md-2">
                @Html.ListBoxFor(x => x.SelectedDishes, Model.Dishes.Select(f => new SelectListItem { Value = f.Id.ToString(), Text = f.Name }))
                @Html.ValidationMessageFor(model => model.Dishes, "", new { @class = "text-danger" })
            </div>
        </div>
        <br />
        <div class="form-group">
            <div class="col-md-6 col-md-offset-3">
                <input type="submit" value="Add Training" class="btn btn-danger" />
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
