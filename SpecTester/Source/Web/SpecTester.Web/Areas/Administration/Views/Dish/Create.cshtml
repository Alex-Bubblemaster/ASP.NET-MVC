@using SpecTester.Data.Models.Common
@model SpecTester.Web.Areas.Administration.ViewModels.CreateDishViewModel
@{
    ViewBag.Title = "Create Dish";
    
}

<h2>Create Dish</h2>


@using (Html.BeginForm("Create", "Dish", FormMethod.Post)) 
{
    <div class="form-horizontal">
        <h4>Dish</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PlateShapes, "Plate Shape", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
            @Html.DropDownListFor(model => model.SelectedPlate, Model.PlateShapes.Select(f => new SelectListItem { Value = f.ToString(), Text = Enum.GetName(typeof(PlateShape), f) }))
            @Html.ValidationMessageFor(model => model.PlateShapes, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Products, "Products", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.SelectedProduct, Model.Products.Select(f => new SelectListItem { Value = f.Id.ToString(), Text = f.Name }))
                @Html.ValidationMessageFor(model => model.Products, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SelectedCookingMethod, "Cooking Methods", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.CookingMethods, Model.CookingMethods.Select(f => new SelectListItem { Value = f.ToString(), Text = Enum.GetName(typeof(CookingMethod), f) }))
                @Html.ValidationMessageFor(model => model.CookingMethods, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.HasSauce, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.HasSauce)
                    @Html.ValidationMessageFor(model => model.HasSauce, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                @*@Html.ActionLink("Add dish", "Create","Dish", new { model = Model}, new { @class = "btn btn-primary"})*@
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
